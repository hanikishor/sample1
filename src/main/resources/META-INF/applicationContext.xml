<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">
 
    <context:annotation-config/>
    <context:component-scan base-package="com.inc"/>
    <context:property-placeholder location="classpath:META-INF/postgresdb.properties"/>
 	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:com/resources/mysqldb.properties</value>
			<value>classpath:postgresdb.properties</value>
		</property>
	</bean> -->
	
	<bean class="java.net.URI" id="dbUrl">
    	<constructor-arg value="${DATABASE_URL}"/>
	</bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
	    <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
	    <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
	    <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
     </bean>
     
 	<bean id="validationImpl" class="com.inc.beans.ValidationImpl"/>
 	    
   <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations">
            <list>
                <value>classpath:META-INF/mapping/**.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                 <prop key="hibernate.hbm2ddl.auto">update</prop>
                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>
    
<!--  <bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
	<property name="sessionFactory">
	  <ref bean="sessionFactory" />
	</property>
	</bean>
	
	<bean id="bemolBaseHibernateDAO" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target">
			<ref local="bemolBaseHibernateDAOImpl"  />
		</property>		
	</bean>
	
	<bean id="bemolBaseHibernateDAOImpl"
			class="com.bemol.dao.base.hibernate.BaseHibernateDao">
			<property name="hibernateTemplate">
				<ref bean="hibernateTemplate" />
			</property>
		</bean>
-->
</beans>